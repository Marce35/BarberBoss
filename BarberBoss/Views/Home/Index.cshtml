@model IEnumerable<BarberBoss.Models.Barber>
@{
    ViewBag.Title = "Home";
}



<main class="container">

    <link rel="stylesheet" href="~/Content/CustomCssFiles/HomeSite.css" />


    <!-- Section 1: Welcome Section with Image -->
    <section class="row mt-4 position-relative">
        <div class="col-12">
            <img src="~/Pictures/BarberShop/barbershop_interior.jpg" class="img-fluid welcome-image" alt="Barbershop Interior" />
            <div class="welcome-overlay">
                <div id="welcomeText">Welcome to BarberBoss</div>
                <div id="welcomeMessage"></div>
            </div>
            <div class="text-center mt-4">
                <a href="@Url.Action("Calendar", "Appointments")" class="btn btn-outline-warning btn-lg booking-btn">Book Now</a>
            </div>
        </div>
    </section>

    <!-- Section 2: Introduction Section -->
    <section class="row mt-4">
        <div class="col-12 text-center">
            <h2>Who We Are</h2>
            <p>We are a team of skilled barbers dedicated to providing top-notch grooming services in a comfortable and stylish environment.</p>

            <!-- Contact Information with Styled Icons and Buttons -->
            <div class="mt-3">
                <p>
                    <a href="#" title="Instagram" class="btn btn-outline-warning">
                        <img src="~/Pictures/SocialMedia/instagram_icon.png" alt="Instagram Icon" class="icon-img d-inline-block align-middle"> Instagram
                    </a>
                    &nbsp;|&nbsp;
                    <a href="#" title="Facebook" class="btn btn-outline-warning">
                        <img src="~/Pictures/SocialMedia/facebook_icon.png" alt="Facebook Icon" class="icon-img d-inline-block align-middle"> Facebook
                    </a>
                </p>
            </div>
        </div>
    </section>


    <!-- Section 3: Barbers Section -->
    <section class="row mt-4">
        <h2 class="col-12 text-center">Meet Our Barbers</h2>

        <!-- Dynamically generate barber cards -->
        @foreach (var barber in Model)
        {
            <div class="col-md-3 mt-3">
                <div class="card">
                    <img src="@Url.Content(barber.ImagePath)" class="card-img-top img-fluid custom-image" alt="@barber.Name">
                    <div class="card-body custom-background text-center">
                        <h5 class="card-title">@barber.Name</h5>
                        <!-- Adjust these links based on your actual model properties -->
                        <a href="@barber.InstagramProfile" class="btn btn-outline-warning">Instagram</a>
                        <a href="@barber.FacebookProfile" class="btn btn-outline-warning">Facebook</a>
                    </div>
                </div>
            </div>
        }

    </section>

    <!-- Section 4: Reviews Section -->
    <section class="row mt-4">
        <div class="col-12 text-center">
            <h2>Client Reviews</h2>

            <!-- Display average grade as stars and value -->
            <div id="averageStarsContainer"></div>
        </div>
    </section>




    <!-- Section 5: Location Section with Map (visible for larger screens) -->
    <section class="row mt-4 d-md-flex justify-content-center align-items-center">
        <div class="col-md-6 text-center">
            <h2>Find us Today</h2>
            <!-- Add map or address here -->
            <p>123 Barber Street, Cityville, USA</p>
        </div>
    </section>

    <!-- Section for Mobile: Days of Operation -->
    <section class="row mt-4 d-sm-flex d-md-none justify-content-center align-items-center" id="daysOfOperationSection">
        <div class="col-sm-12 text-center">
            <h2>Days of Operation</h2>
            <p id="operationMessage">We are open Monday through Saturday. Closed on Sundays.</p>

            <!-- Container for the buttons -->
            <div class="d-flex flex-row mt-3" id="daysButtonsContainer"></div>
        </div>
    </section>


    <section class="row mt-4 d-md-flex justify-content-center align-items-center">
        <div class="col-md-6 text-center">
            <!-- Add your map component or embed the map here -->
            <!-- Example using Google Maps Embed API -->
            <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2964.8209445976927!2d21.40697297703645!3d42.00411817122833!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x13541443605aa4ab%3A0x33d56647e5b87264!2sFaculty%20of%20Computer%20Science%20%26%20Engineering!5e0!3m2!1sen!2smk!4v1705712251392!5m2!1sen!2smk" width="100%" height="400" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
        </div>
    </section>


    


</main>

<style>
    .checked {
        color: gold;
    }

    .bigger {
        font-size: 24px; /* Adjust the size as needed */
    }

    .average-value {
        font-size: 18px; /* Adjust the size as needed */
        margin-top: 5px;
    }
</style>




@section Scripts{
    <script src="https://unpkg.com/typeit@8.7.1/dist/index.umd.js"></script>

    <script>
        new TypeIt("#welcomeMessage", {
            strings: [
                "Your go-to destination for a stylish haircut and grooming experience."
            ],
            speed: 100,
            breakLines: false,
            loop: true,
            lifeLike: true,
            afterComplete: function (step, instance) {
                document.getElementById('welcomeMessage').style.animation = 'none';
            }
        }).go();

        document.addEventListener('DOMContentLoaded', function () {
            var days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun - Closed'];

            var buttonContainer = document.getElementById('daysButtonsContainer');
            var messageElement = document.getElementById('operationMessage');

            days.forEach(function (day, index) {
                var button = document.createElement('button');
                button.textContent = day;
                button.className = 'btn btn-outline-warning mx-2 days-button';

                // Add styling for the buttons
                button.style.backgroundColor = 'rgba(0, 0, 0, ' + (index === days.length - 1 ? '1' : '0.5') + ')';
                button.style.color = 'white';

                // Add margin to the first and last buttons
                if (index === 0) {
                    button.style.marginLeft = '20px';  // Adjust the margin as needed
                } else if (index === days.length - 1) {
                    button.style.marginRight = '8px';  // Adjust the margin as needed
                }

                // You can add additional styling or functionality here

                buttonContainer.appendChild(button);
            });

            // Add responsive styling for mobile devices
            buttonContainer.classList.add('flex-nowrap', 'overflow-auto');



            $.ajax({
            url: '@Url.Action("GetAverageReviewGrade", "Appointments")', // Adjust the controller and action names as needed
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                updateAverageStars(data.averageGrade);
            },
            error: function () {
                // Handle error if needed
            }
            });

            // Function to update the HTML with stars and average value
            function updateAverageStars(averageGrade) {
                var $averageStarsContainer = $('#averageStarsContainer');
                $averageStarsContainer.empty();

                var fullStars = Math.floor(averageGrade);
                var halfStar = (averageGrade - fullStars) >= 0.5 ? 1 : 0;

                for (var i = 0; i < fullStars; i++) {
                    $averageStarsContainer.append('<i class="fas fa-star checked bigger"></i>');
                }

                if (halfStar === 1) {
                    $averageStarsContainer.append('<i class="fas fa-star-half-alt checked bigger"></i>');
                }

                // Display the average value below the stars
                $averageStarsContainer.append('<div class="average-value" style="font-size:4em;">' + averageGrade.toFixed(1) + '</div>');

                 // Add a button below the average value
                $averageStarsContainer.append('<button class="btn btn-primary" id="clientAppointmentsBtn">Leave a review</button>');

                // Set the click event for the button
                $('#clientAppointmentsBtn').on('click', function () {
                    // Redirect to the client appointments page
                    window.location.href = '@Url.Action("ClientAppointmentsList", "Home")'; // Adjust the controller and action names as needed
                });
            }
        });

    </script>
}

